{
  "openapi": "3.1.0",
  "info": {
    "title": "Bulgarian Voice Coach",
    "description": "Voice-enabled web application for teaching Bulgarian to Slavic speakers with real-time speech recognition, synthesis, and grammar error detection.\n\n**Security Note**: This is a local-first application with no authentication by design. All user progress is stored client-side in localStorage. The API is intentionally open as it runs locally and contains no sensitive data.",
    "contact": {
      "name": "Bulgarian Voice Coach Team",
      "email": "support@example.com"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "http://localhost:8001",
      "description": "Production server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Root",
        "description": "Root endpoint - returns API information",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint following Health Check Response Format",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tts": {
      "get": {
        "tags": [
          "tts"
        ],
        "summary": "Text To Speech",
        "description": "Convert text to speech and stream audio",
        "operationId": "text_to_speech_tts_get",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text"
            }
          },
          {
            "name": "track_timing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Track Timing"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/content/scenarios": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Scenarios",
        "description": "Get list of available scenarios",
        "operationId": "get_scenarios_content_scenarios_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/content/grammar/{grammar_id}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Grammar",
        "description": "Get specific grammar item by ID with L1-specific contrast notes",
        "operationId": "get_grammar_content_grammar__grammar_id__get",
        "parameters": [
          {
            "name": "grammar_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Grammar Id"
            }
          },
          {
            "name": "l1",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "L1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/content/drills/{grammar_id}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Drills For Grammar",
        "description": "Get drills for a specific grammar item with L1-specific contrast",
        "operationId": "get_drills_for_grammar_content_drills__grammar_id__get",
        "parameters": [
          {
            "name": "grammar_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Grammar Id"
            }
          },
          {
            "name": "l1",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "L1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/content/mini-lessons": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Mini Lessons",
        "description": "Get list of available mini-lessons",
        "operationId": "get_mini_lessons_content_mini_lessons_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/content/mini-lessons/{lesson_id}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Mini Lesson By Id",
        "description": "Get specific mini-lesson by ID",
        "operationId": "get_mini_lesson_by_id_content_mini_lessons__lesson_id__get",
        "parameters": [
          {
            "name": "lesson_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Lesson Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/content/mini-lessons/due": {
      "post": {
        "tags": [
          "content"
        ],
        "summary": "Get Due Lessons",
        "description": "Get mini-lessons due for review based on user's SRS progress",
        "operationId": "get_due_lessons_content_mini_lessons_due_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProgress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/content/mini-lessons/for-error/{error_pattern}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Lessons For Error",
        "description": "Get mini-lessons that match a specific error pattern",
        "operationId": "get_lessons_for_error_content_mini_lessons_for_error__error_pattern__get",
        "parameters": [
          {
            "name": "error_pattern",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Error Pattern"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/api/config": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Get App Config",
        "description": "Get current application configuration for frontend",
        "operationId": "get_app_config_api_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/config/l1": {
      "post": {
        "tags": [
          "config"
        ],
        "summary": "Update L1 Language",
        "description": "Update L1 language preference (session-based, not persistent)",
        "operationId": "update_l1_language_api_config_l1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/content/analyze": {
      "post": {
        "tags": [
          "content"
        ],
        "summary": "Analyze Text",
        "description": "Analyze Bulgarian text for grammar errors and generate drills with L1 contrast",
        "operationId": "analyze_text_content_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "properties": {
          "error": {
            "type": "string",
            "title": "Error",
            "description": "Error type or code"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Human-readable error message"
          },
          "details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details",
            "description": "Additional error details"
          }
        },
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "title": "ErrorResponse",
        "description": "Standard error response format for API consistency"
      },
      "HealthCheckInfo": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Health check status: pass/fail/warn"
          },
          "componentType": {
            "type": "string",
            "title": "Componenttype",
            "description": "Type of component being checked"
          },
          "observedValue": {
            "type": "boolean",
            "title": "Observedvalue",
            "description": "Observed value for this check"
          },
          "output": {
            "type": "string",
            "title": "Output",
            "description": "Human-readable output message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "componentType",
          "observedValue",
          "output"
        ],
        "title": "HealthCheckInfo",
        "description": "Individual health check information"
      },
      "HealthCheckResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Overall status: pass/fail/warn"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "API version"
          },
          "serviceId": {
            "type": "string",
            "title": "Serviceid",
            "description": "Service identifier"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Service description"
          },
          "checks": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/HealthCheckInfo"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Checks",
            "description": "Individual health checks"
          }
        },
        "type": "object",
        "required": [
          "status",
          "version",
          "serviceId",
          "description",
          "checks"
        ],
        "title": "HealthCheckResponse",
        "description": "Health Check Response Format following RFC draft"
      },
      "UserProgress": {
        "properties": {
          "lesson_progress": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Lesson Progress"
          }
        },
        "type": "object",
        "required": [
          "lesson_progress"
        ],
        "title": "UserProgress",
        "description": "User progress data for SRS calculation"
      }
    }
  },
  "tags": [
    {
      "name": "health",
      "description": "Health check endpoints"
    },
    {
      "name": "tts",
      "description": "Text-to-speech operations"
    },
    {
      "name": "content",
      "description": "Grammar and scenario content"
    },
    {
      "name": "config",
      "description": "Application configuration"
    },
    {
      "name": "websocket",
      "description": "WebSocket connections"
    }
  ]
}