{
  "openapi": "3.1.0",
  "info": {
    "title": "Bulgarian Voice Coach",
    "description": "Voice-enabled web application for teaching Bulgarian to Slavic speakers with real-time speech recognition, synthesis, and grammar error detection.\n\n**Security Note**: This is a local-first application with no authentication by design. All user progress is stored client-side in localStorage. The API is intentionally open as it runs locally and contains no sensitive data.",
    "contact": {
      "name": "Bulgarian Voice Coach Team",
      "email": "support@example.com"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "http://localhost:8001",
      "description": "Production server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Root",
        "description": "Root endpoint - returns API information",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint following RFC Health Check Response Format\n\nReturns health status in application/health+json format according to\nthe Health Check Response Format for HTTP APIs RFC draft.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              },
              "application/health+json": {
                "example": {
                  "status": "pass"
                }
              }
            }
          },
          "503": {
            "description": "Service is unhealthy",
            "content": {
              "application/health+json": {
                "example": {
                  "status": "fail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tts": {
      "get": {
        "tags": [
          "tts"
        ],
        "summary": "Text To Speech",
        "description": "Convert text to speech and stream audio with optional voice profile",
        "operationId": "text_to_speech_tts_get",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text"
            }
          },
          {
            "name": "track_timing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Track Timing"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/tts/profiles": {
      "get": {
        "tags": [
          "tts"
        ],
        "summary": "Get Tts Profiles",
        "description": "Get available TTS voice profiles",
        "operationId": "get_tts_profiles_tts_profiles_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TTSProfilesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/content/scenarios": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Scenarios",
        "description": "Get list of available scenarios",
        "operationId": "get_scenarios_content_scenarios_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/content/grammar/{grammar_id}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Grammar",
        "description": "Get specific grammar item by ID with L1-specific contrast notes",
        "operationId": "get_grammar_content_grammar__grammar_id__get",
        "parameters": [
          {
            "name": "grammar_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Grammar Id"
            }
          },
          {
            "name": "l1",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "L1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/content/drills/{grammar_id}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Drills For Grammar",
        "description": "Get drills for a specific grammar item with L1-specific contrast",
        "operationId": "get_drills_for_grammar_content_drills__grammar_id__get",
        "parameters": [
          {
            "name": "grammar_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Grammar Id"
            }
          },
          {
            "name": "l1",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "L1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/content/mini-lessons": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Mini Lessons",
        "description": "Get list of available mini-lessons",
        "operationId": "get_mini_lessons_content_mini_lessons_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/content/mini-lessons/{lesson_id}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Mini Lesson By Id",
        "description": "Get specific mini-lesson by ID",
        "operationId": "get_mini_lesson_by_id_content_mini_lessons__lesson_id__get",
        "parameters": [
          {
            "name": "lesson_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Lesson Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/content/mini-lessons/due": {
      "post": {
        "tags": [
          "content"
        ],
        "summary": "Get Due Lessons",
        "description": "Get mini-lessons due for review based on user's SRS progress",
        "operationId": "get_due_lessons_content_mini_lessons_due_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProgress"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/content/mini-lessons/for-error/{error_pattern}": {
      "get": {
        "tags": [
          "content"
        ],
        "summary": "Get Lessons For Error",
        "description": "Get mini-lessons that match a specific error pattern",
        "operationId": "get_lessons_for_error_content_mini_lessons_for_error__error_pattern__get",
        "parameters": [
          {
            "name": "error_pattern",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Error Pattern"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/api/config": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Get App Config",
        "description": "Get current application configuration for frontend",
        "operationId": "get_app_config_api_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/l1": {
      "post": {
        "tags": [
          "config"
        ],
        "summary": "Update L1 Language",
        "description": "Update L1 language preference (session-based, not persistent)",
        "operationId": "update_l1_language_api_config_l1_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateL1Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateL1Response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/content/analyze": {
      "post": {
        "tags": [
          "content"
        ],
        "summary": "Analyze Text",
        "description": "Analyze Bulgarian text for grammar errors and generate drills with L1 contrast",
        "operationId": "analyze_text_content_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeTextRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyzeTextResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnalyzeTextRequest": {
        "properties": {
          "text": {
            "type": "string",
            "minLength": 1,
            "title": "Text",
            "description": "Bulgarian text to analyze"
          },
          "l1": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(PL|RU|UK|SR)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "L1",
            "description": "L1 language code for contrasts"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "AnalyzeTextRequest",
        "description": "Request to analyze Bulgarian text for grammar errors"
      },
      "AnalyzeTextResponse": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Original text that was analyzed"
          },
          "corrections": {
            "items": {
              "$ref": "#/components/schemas/GrammarCorrection"
            },
            "type": "array",
            "title": "Corrections",
            "description": "Grammar corrections found"
          },
          "drill_suggestions": {
            "items": {
              "$ref": "#/components/schemas/DrillSuggestion"
            },
            "type": "array",
            "title": "Drill Suggestions",
            "description": "Suggested practice drills"
          },
          "l1_language": {
            "type": "string",
            "title": "L1 Language",
            "description": "L1 language used for contrasts"
          }
        },
        "type": "object",
        "required": [
          "text",
          "corrections",
          "drill_suggestions",
          "l1_language"
        ],
        "title": "AnalyzeTextResponse",
        "description": "Response from text analysis with corrections and drill suggestions"
      },
      "AppConfigResponse": {
        "properties": {
          "l1_language": {
            "type": "string",
            "title": "L1 Language",
            "description": "Default L1 language"
          },
          "supported_languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Supported Languages",
            "description": "Supported L1 language codes"
          },
          "language_names": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Language Names",
            "description": "Language code to display name mapping"
          }
        },
        "type": "object",
        "required": [
          "l1_language",
          "supported_languages",
          "language_names"
        ],
        "title": "AppConfigResponse",
        "description": "Application configuration response"
      },
      "DrillSuggestion": {
        "properties": {
          "grammar_id": {
            "type": "string",
            "title": "Grammar Id",
            "description": "Grammar rule identifier"
          },
          "explanation": {
            "type": "string",
            "title": "Explanation",
            "description": "Micro-explanation in Bulgarian"
          },
          "contrast_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contrast Note",
            "description": "L1-specific contrast note"
          },
          "drills": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Drills",
            "description": "Practice drills for this grammar point"
          }
        },
        "type": "object",
        "required": [
          "grammar_id",
          "explanation",
          "drills"
        ],
        "title": "DrillSuggestion",
        "description": "Grammar drill suggestion with L1 contrast"
      },
      "ErrorResponse": {
        "properties": {
          "error": {
            "type": "string",
            "title": "Error",
            "description": "Error type or code"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Human-readable error message"
          },
          "details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details",
            "description": "Additional error details"
          }
        },
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "title": "ErrorResponse",
        "description": "Standard error response format for API consistency"
      },
      "GrammarCorrection": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Type of grammar error"
          },
          "before": {
            "type": "string",
            "title": "Before",
            "description": "Original incorrect text"
          },
          "after": {
            "type": "string",
            "title": "After",
            "description": "Corrected text"
          },
          "note": {
            "type": "string",
            "title": "Note",
            "description": "Explanation of the correction"
          },
          "error_tag": {
            "type": "string",
            "title": "Error Tag",
            "description": "Grammar rule identifier"
          }
        },
        "type": "object",
        "required": [
          "type",
          "before",
          "after",
          "note",
          "error_tag"
        ],
        "title": "GrammarCorrection",
        "description": "Individual grammar correction"
      },
      "HealthCheckItem": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Check status: pass/fail/warn"
          },
          "componentType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Componenttype",
            "description": "Type of component being checked"
          },
          "observedValue": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observedvalue",
            "description": "Observed value for this check"
          },
          "observedUnit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observedunit",
            "description": "Unit of observed value"
          },
          "output": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output",
            "description": "Human-readable output message"
          },
          "time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time",
            "description": "RFC 3339 timestamp"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "HealthCheckItem",
        "description": "Individual health check item (RFC compliant)"
      },
      "HealthCheckResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Overall status: pass/fail/warn"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Public version of the service"
          },
          "releaseId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Releaseid",
            "description": "Internal release identifier"
          },
          "serviceId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serviceid",
            "description": "Unique service identifier"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Human-friendly description"
          },
          "checks": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/HealthCheckItem"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checks",
            "description": "Individual health checks"
          },
          "output": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output",
            "description": "Raw error output for warn/fail states"
          },
          "notes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Array of notes relevant to health"
          },
          "links": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links",
            "description": "Links with more health information"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "HealthCheckResponse",
        "description": "Health Check Response Format following RFC draft"
      },
      "TTSProfilesResponse": {
        "properties": {
          "profiles": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Profiles",
            "description": "Voice profiles with their configurations"
          }
        },
        "type": "object",
        "required": [
          "profiles"
        ],
        "title": "TTSProfilesResponse",
        "description": "Available TTS voice profiles"
      },
      "UpdateL1Request": {
        "properties": {
          "l1_language": {
            "type": "string",
            "pattern": "^(PL|RU|UK|SR)$",
            "title": "L1 Language",
            "description": "L1 language code (PL, RU, UK, SR)"
          }
        },
        "type": "object",
        "required": [
          "l1_language"
        ],
        "title": "UpdateL1Request",
        "description": "Request to update L1 language preference"
      },
      "UpdateL1Response": {
        "properties": {
          "l1_language": {
            "type": "string",
            "title": "L1 Language",
            "description": "Validated L1 language code"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Update status"
          }
        },
        "type": "object",
        "required": [
          "l1_language",
          "status"
        ],
        "title": "UpdateL1Response",
        "description": "Response after updating L1 language preference"
      },
      "UserProgress": {
        "properties": {
          "lesson_progress": {
            "additionalProperties": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "object",
            "title": "Lesson Progress",
            "description": "Lesson progress mapping"
          }
        },
        "type": "object",
        "required": [
          "lesson_progress"
        ],
        "title": "UserProgress",
        "description": "User progress data for SRS calculation"
      }
    }
  },
  "tags": [
    {
      "name": "health",
      "description": "Health check endpoints"
    },
    {
      "name": "tts",
      "description": "Text-to-speech operations"
    },
    {
      "name": "content",
      "description": "Grammar and scenario content"
    },
    {
      "name": "config",
      "description": "Application configuration"
    },
    {
      "name": "websocket",
      "description": "WebSocket connections"
    }
  ]
}